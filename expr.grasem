expr {
  main = expr+ 
  expr = objectGroup | arrayGroup | expressionGroup | defineWordGroup | primary

  objectGroup = lbraceToken expr* rbraceToken
  arrayGroup = lbracketToken expr* rbracketToken
  expressionGroup = lparToken expr* rparToken
  defineWordGroup = defineWordToken expr
  
  groupBegin (groupBegin) = lbraceToken | rbraceToken | lbracketToken | rbracketToken | lparToken | rparToken

  lbraceToken (open brace) = "D" "{" spc "{" eol
  rbraceToken (close brace) = "D" "}" spc "}" eol
  lbracketToken (open bracket) = "D" "[" spc "[" eol
  rbracketToken (close bracket) = "D" "]" spc "]" eol
  lparToken (open bracket) = "D" "(" spc "(" eol
  rparToken (close bracket) = "D" ")" spc ")" eol
  defineWordToken = "e!" spc text eol

  primary = ~groupBegin (tripleTextToken | doubleTextToken | singleTextToken | noTextToken)
  tripleTextToken = tag spc text spc text spc text eol
  doubleTextToken = tag spc text spc text eol
  singleTextToken = tag spc text eol
  noTextToken = unknownTag eol

  unknownTag (unknown) = "U"

  tag (tag) = tagcode &endTag
  endTag = space | eol | end

  tagcode = basicTag | numericalTag | dateTag | stringsTag | wordsTag
  basicTag = delimiterTag | "H" | "N" | "I" | "W" | "S" | "M" | "C" | "U" | "B"
  delimiterTag =  "D[" | "D]" | "D{" | "D}" | "D(" | "D)"
                | "D/" | "D." | "D:" | "D@" | "D#" | "D-" 
		| "D+" | "D$" | "D<" | "D>"  
  numericalTag = "bP" | "bR" | "bT" | "b$" | "bE" | "bF"
  dateTag = "cZ" | "cY" | "cD" | "cP" | "cH"
  stringsTag = "dB" | "d@" | "d<" | "d%" | "dU"
  wordsTag =   "eU" | "eS" | "eF" | "eP" | "e@" | "e'"
             | "e/" | "e." | "e:" | "e!" | "e?"
  
  text = ~tag textChar+
  textChar = ~spc ~eol ~end any
  spc (space) = " " | "\t"
  eol (eol) = newline+
  newline (newline) = "\n"
}


  main [@expr] = [[${expr}]]
  expr [e] = [[${e}]]

  objectGroup [lb @e rb] =
[[G asonObject nil
${e}g asonObject\n]]
  arrayGroup [lb @e rb] =
[[G asonArray nil
${e}g asonArray\n]]
  expressionGroup [lb @e rb] =
[[G asonExpression nil
${e}g asonExpression\n]]

  defineWordGroup [lhs rhs] = 
[[G defineWord ${lhs}
${rhs}
g defineWord
]]
  
  groupBegin [t] = [[${t}]]

  lbraceToken [tag subtag spc text eol] = [[${tag}${subtag} ${text}\n]]
  rbraceToken [tag subtag spc text eol] = [[${tag}${subtag} ${text}\n]]
  lbracketToken [tag subtag spc text eol] = [[${tag}${subtag} ${text}\n]]
  rbracketToken [tag subtag spc text eol] = [[${tag}${subtag} ${text}\n]]
  lparToken [tag subtag spc text eol] = [[${tag}${subtag} ${text}\n]]
  rparToken [tag subtag spc text eol] = [[${tag}${subtag} ${text}\n]]

  defineWordToken [tag spc text eol] = [[${text}]]

  primary [t] = [[${t}]]
  tripleTextToken [tag spc0 text1 spc1 text2 spc2 text3 eol] = [[${tag}${spc0}${text1}${spc1}${text2}${spc2}${text3}${eol}]]
  doubleTextToken [tag spc0 text1 spc1 text2 eol] = [[${tag}${spc0}${text1}${spc1}${text2}${eol}]]
  singleTextToken [tag spc0 text1 eol] = [[${tag}${spc0}${text1}${eol}]]
  noTextToken [tag eol] = [[${tag}${eol}]]

  unknownTag [tag] = [[${tag}]]

  tag [tag _lookahead] = [[${tag}]]
  endTag [c] = [[${c}]]

  tagcode [t] = [[${t}]]
  basicTag [t] = [[${t}]]
  delimiterTag [t] = [[${t}]]
  numericalTag [t] = [[${t}]]
  dateTag [t] = [[${t}]]
  stringsTag [t] = [[${t}]]
  wordsTag [t] = [[${t}]]

  text [@cs] = [[${cs}]]
  textChar [c] = [[${c}]]
  spc [c] = [[${c}]]
  eol [@c] = [[${c}]]
  newline [nl] = [[${nl}]]

